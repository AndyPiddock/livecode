#!
 
send "doPackage" to me
 
on doPackage
   local tArgs
   put the commandArguments into tArgs
   
   local tEngine
   put the commandName into tEngine
  
   if the platform is "win32" then
      set the itemdelimiter to backslash
   else
      set the itemdelimiter to slash
   end if
   
   local tPackagerFilename
   put commandArguments(1) into tPackagerFilename

   put "extensions" & the itemDel & \
      "script-libraries" & the itemDel & \
	  "extensionpackage" & the itemDel & \
      "extensionpackage.livecodescript" \
      into item -2 to -1 of tPackagerFilename

   start using stack tPackagerFilename

   local tSendCmd   
   switch tArgs[2]
   case "buildlcbextensions"
      -- Resolve dependency order of list of extensions
      -- and build each one.
      put "buildPackageAndExtractLCBExtensions" into tSendCmd
      break
   case "extractdocs"
      put "extractDocs" into tSendCmd
      break
   case "buildextension"
      put "buildPackageAndExtractExtension" into tSendCmd
      break 
   default
      write "invalid mode" && tArgs[2] to stderr
      quit 1
      break
   end switch

   repeat with x = 3 to the number of elements in tArgs
      put " tArgs[" & x & "]," after tSendCmd
   end repeat
   delete the last char of tSendCmd
   
   try
      send tSendCmd to stack tPackagerFilename
   catch tError
      write tError to stderr
      quit 1
   end try
end doPackage